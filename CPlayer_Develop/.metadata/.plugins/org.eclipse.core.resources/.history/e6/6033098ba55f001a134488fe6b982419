package com.stackroute.userservice.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.stackroute.userservice.dto.UserDTO;
import com.stackroute.userservice.entity.AuthenticatedUser;
import com.stackroute.userservice.services.CplayersUserDetailsService;

@RestController
public class AuthenticateUserController {

	@Autowired
	private CplayersUserDetailsService cplayersUserDetailsService;

	@PostMapping(value ="/login")
	public ResponseEntity<> loginUser(@RequestBody UserDTO userDTO) {
		authenticate(userDTO.getUserName(), userDTO.getPassword());
		AuthenticatedUser authenticatedUser = cplayersUserDetailsService.loadUserByUsername(userDTO.getUserName());
		return new ResponseEntity<>(new JwtResponse(token), HttpStatus.OK);
	}
	
	@RequestMapping(value = "/signup", method = RequestMethod.POST)
	public ResponseEntity<?> saveUser(@RequestBody UserDTO user) throws Exception {
		return ResponseEntity.ok(userDetailsService.save(user));
	}

	private void authenticate(String username, String password) throws Exception {
		try {
			authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(username, password));
		} catch (DisabledException e) {
			throw new Exception("USER_DISABLED", e);
		} catch (BadCredentialsException e) {
			throw new Exception("INVALID_CREDENTIALS", e);
		}
	}

}

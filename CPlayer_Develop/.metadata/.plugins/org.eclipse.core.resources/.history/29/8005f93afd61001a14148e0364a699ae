package com.stackroute.userservice.services;

import java.util.ArrayList;
import java.util.Objects;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import com.stackroute.userservice.dto.UserDTO;
import com.stackroute.userservice.entity.AuthenticatedUser;
import com.stackroute.userservice.repositories.AuthenticatedUserRepository;

@Service
public class CplayersUserDetailsService implements UserDetailsService {

	@Autowired
	private PasswordEncoder passwordEncoder;
	
	@Autowired
	private AuthenticatedUserRepository authenticatedUserRepository;

	@Override
	public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
		AuthenticatedUser authenticatedUser = authenticatedUserRepository.findByUserName(username);
		if (Objects.isNull(authenticatedUser)) {
			throw new UsernameNotFoundException("User not found with username: " + username);
		}
		return new org.springframework.security.core.userdetails.User(authenticatedUser.getUserName(), authenticatedUser.getPassword(),
				new ArrayList<>());

	}

	public AuthenticatedUser saveNewUser(UserDTO userDTO) {
		AuthenticatedUser authenticatedUser = new AuthenticatedUser();
		authenticatedUser.setUserName(userDTO.getUserName());
		authenticatedUser.setPassword(passwordEncoder.encode(userDTO.getPassword()));
		return authenticatedUserRepository.save(authenticatedUser);

	}

}

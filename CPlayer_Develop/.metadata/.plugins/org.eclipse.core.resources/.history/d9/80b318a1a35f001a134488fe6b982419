package com.stackroute.userservice.services;

import java.util.ArrayList;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.security.crypto.password.PasswordEncoder;

import com.stackroute.userservice.dto.UserDTO;
import com.stackroute.userservice.entity.AuthenticatedUser;
import com.stackroute.userservice.repositories.AuthenticatedUserRepository;

public class CplayersUserDetailsService implements UserDetailsService {

	@Autowired
	private PasswordEncoder passwordEncoder;
	
	@Autowired
	private AuthenticatedUserRepository authenticatedUserRepository;

	@Override
	public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
		if ("cplayers".equals(username)) {
			return new User("cplayers", "$2a$10$slYQmyNdGzTn7ZLBXBChFOC9f6kFjAqPhccnP6DxlWXx2lPk1C3G6",
					new ArrayList<>());
		} else {
			throw new UsernameNotFoundException("User not found with username: " + username);
		}
		
		AuthenticatedUserRepository authenticatedUserRepository = authenticatedUserRepository.findByUserName(username);
		if (user == null) {
			throw new UsernameNotFoundException("User not found with username: " + username);
		}
		return new org.springframework.security.core.userdetails.User(user.getUsername(), user.getPassword(),
				new ArrayList<>());

	}

	public AuthenticatedUser saveNewUser(UserDTO userDTO) {
		AuthenticatedUser authenticatedUser = new AuthenticatedUser();
		authenticatedUser.setUserName(userDTO.getUserName());
		authenticatedUser.setPassword(passwordEncoder.encode(userDTO.getPassword()));
		return authenticatedUser;

	}

}
